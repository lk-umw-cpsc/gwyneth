SET FOREIGN_KEY_CHECKS = 0;

create or replace table user (
    id int primary key AUTO_INCREMENT,
    name varchar(64) not null,
    authorization tinyint default 0 not null,
    email varchar(256) unique not null,
    passwordHash varchar(64) not null,
    salt varchar(64) not null
);

create or replace table number (
    base10 int primary key,
    french varchar(256),
    english varchar(256)
);

create or replace table userKnowsNumber (
    userid int,
    base10 int,
    difficulty int default 5,
    foreign key (userid) references user(id)
    on delete cascade
    on update cascade,
    foreign key (base10) references number(base10)
    on delete cascade
    on update cascade,
    unique (userid, base10)
);

create or replace table term (
    id int primary key AUTO_INCREMENT,
    english varchar(128),
    french varchar(128),
    englishAlt varchar(256),
    frenchAlt varchar(256),
    gender int default 0
);

create or replace table category (
    id int primary key AUTO_INCREMENT,
    sortindex int default 0,
    name varchar(256),
    ischapter boolean
);

create or replace table termInCategory (
    termid int,
    categoryid int,
    foreign key (termid) references term(id)
    on delete cascade
    on update cascade,
    foreign key (categoryid) references category(id)
    on delete cascade
    on update cascade,
    primary key (termid, categoryid)
);

create or replace table userKnowsTerm (
    userid int,
    termid int,
    difficulty int default 5,
    foreign key (userid) references user(id)
    on delete cascade
    on update cascade,
    foreign key (termid) references term(id)
    on delete cascade
    on update cascade,
    primary key (userid, termid)
);

create or replace table speech (
    id int primary key AUTO_INCREMENT,
    words varchar(256)
);

create or replace table verb (
    id int primary key AUTO_INCREMENT,
    infinitive varchar(32) not null,
    presentParticiple varchar(32) not null,
    presentParticipleEnglish varchar(32) not null

    pastParticiple varchar(32) not null,
    pastParticipleEnglish varchar(32) not null,
    passeAvoirEnglish varchar(32),
    passeEtreEnglish varchar(32),

    jePresent varchar(32) not null,
    tuPresent varchar(32) not null,
    ilPresent varchar(32) not null,
    nousPresent varchar(32) not null,
    vousPresent varchar(32) not null,
    ilsPresent varchar(32) not null,

    imperfectStem varchar(32) not null,
    jeImperfect varchar(32) not null,
    tuImperfect varchar(32) not null,
    ilImperfect varchar(32) not null,
    nousImperfect varchar(32) not null,
    vousImperfect varchar(32) not null,
    ilsImperfect varchar(32) not null,

    conditionalFutureStem varchar(32) not null,
    jeConditional varchar(32) not null,
    tuConditional varchar(32) not null,
    ilConditional varchar(32) not null,
    nousConditional varchar(32) not null,
    vousConditional varchar(32) not null,
    ilsConditional varchar(32) not null,

    jeFuture varchar(32) not null,
    tuFuture varchar(32) not null,
    ilFuture varchar(32) not null,
    nousFuture varchar(32) not null,
    vousFuture varchar(32) not null,
    ilsFuture varchar(32) not null
);

SET FOREIGN_KEY_CHECKS = 1;